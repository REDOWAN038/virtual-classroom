
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author red2724
 */
public class JoinClass extends javax.swing.JFrame {

    /**
     * Creates new form JoinClass
     */
    public JoinClass(int ID,String Name) throws ClassNotFoundException, SQLException{
        this.ID = ID;
        this.Name = Name;
        initComponents();
        conn = Connector.ConnectDatabase();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCode = new javax.swing.JLabel();
        fieldCode = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(100, 100));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCode.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblCode.setText("Class Code");
        getContentPane().add(lblCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 120, 60));

        fieldCode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(fieldCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 112, 220, 30));

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 206, 120, 32));

        btnConfirm.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConfirmMouseClicked(evt);
            }
        });
        getContentPane().add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 206, 120, 32));

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 102, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        getContentPane().add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        // TODO add your handling code here:
                setVisible(false);
                try {
                    Student student = new Student(ID,Name);
                    student.setLocationRelativeTo(null);
                    student.setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CreateClass.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(JoinClass.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_btnBackMouseClicked

    private void btnConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmMouseClicked
        // TODO add your handling code here:
                String tableName = "_" + Integer.toString(ID);
                
                String courseName = "";
                String sessionName = "";
                String sectionName = "";
                try {
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery("SELECT * FROM COURSE");
                    
                    boolean found = false;
                    
                    while(rs.next()){
                        String code = rs.getString("Course_Code");
                        
                        if(code.equals(fieldCode.getText())){
                            courseName = rs.getString("Course_Name");
                            sessionName = rs.getString("Session");
                            sectionName = rs.getString("Section");
                            found = true;
                            break;
                        }
                    }
                    
                    if(!found){
                        JDialog dialog = new JDialog();
                        dialog.setAlwaysOnTop(true);    
                        JOptionPane.showMessageDialog(dialog, "Sorry!!! Wrong Class Code. Try Again!!!" , null , JOptionPane.PLAIN_MESSAGE );
                        
                        setVisible(false);
        
                        try {
                            JoinClass join = new JoinClass(ID,Name);
                            join.setLocationRelativeTo(null);
                            join.setVisible(true);
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(JoinClass.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    pStmt = conn.prepareStatement("INSERT INTO "+ tableName +" VALUES(?,?,?,?)");
                    pStmt.setString(1,fieldCode.getText());
                    pStmt.setString(2,courseName);
                    pStmt.setString(3,sessionName);
                    pStmt.setString(4,sectionName);
                    pStmt.execute();
                    pStmt.close();
                    
                    tableName = fieldCode.getText() + "_attendance_coloumns";
                    String op = "SELECT * FROM "+tableName;;
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(op);
                    int rowNumbers = 0;
                    
                    while(rs.next()){
                        rowNumbers++;
                    }
                    
                    rs.close();
                    stmt.close();
                    
                    tableName = fieldCode.getText() + "_attendance";
                    op = "INSERT INTO "+ tableName + " VALUES";
                    String op1 = "(";
                    int r = rowNumbers;
                    
                    while(r>1){
                        op1 = op1+"?,";
                        r-=1;
                    }
                    
                    op1 = op1+"?)";
                    
                    op = op+op1;
                    
                    pStmt = conn.prepareStatement(op);
                    pStmt.setInt(1,ID);
                    pStmt.setString(2,Name);
                    
                    for(int i=3;i<=rowNumbers;i++){
                        pStmt.setString(i,"-");
                    }
                    pStmt.executeUpdate();
                    pStmt.close();
                    
                    
                    tableName = fieldCode.getText() + "_result_coloumns";
                    op = "SELECT * FROM "+tableName;;
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(op);
                    rowNumbers = 0;
                    
                    while(rs.next()){
                        rowNumbers++;
                    }
                    
                    rs.close();
                    stmt.close();
                    
                    tableName = fieldCode.getText() + "_result";
                    op = "INSERT INTO "+ tableName + " VALUES";
                    op1 = "(";
                    r = rowNumbers;
                    
                    while(r>1){
                        op1 = op1+"?,";
                        r-=1;
                    }
                    
                    op1 = op1+"?)";
                    
                    op = op+op1;
                    
                    pStmt = conn.prepareStatement(op);
                    pStmt.setInt(1,ID);
                    pStmt.setString(2,Name);
                    
                    for(int i=3;i<=rowNumbers;i++){
                        pStmt.setString(i,"-");
                    }
                    pStmt.executeUpdate();
                    pStmt.close();
                    
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(CreateClass.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                JDialog dialog = new JDialog();
                dialog.setAlwaysOnTop(true);    
                JOptionPane.showMessageDialog(dialog, "Congratulations!!! Joined New Class" , null , JOptionPane.PLAIN_MESSAGE );
                
                setVisible(false);
                try {
                    Student student = new Student(ID,Name);
                    student.setLocationRelativeTo(null);
                    student.setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CreateClass.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(JoinClass.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_btnConfirmMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JoinClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JoinClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JoinClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JoinClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JoinClass(0,"a").setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(JoinClass.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(JoinClass.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JTextField fieldCode;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblCode;
    // End of variables declaration//GEN-END:variables

    private int ID;
    private String Name;
    
    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pStmt = null;
    ResultSet rs = null;
}

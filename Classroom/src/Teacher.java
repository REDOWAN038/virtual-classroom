
import com.k33ptoo.components.KGradientPanel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GrayFilter;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.text.Document;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Redowan
 */
public class Teacher extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    public Teacher(int ID,String Name) throws ClassNotFoundException, SQLException{
        this.ID = ID;
        this.Name = Name;
        conn = Connector.ConnectDatabase();
        cursor = new Cursor(Cursor.HAND_CURSOR);
        initComponents();
        setName();
        getClasses();
        bodyofClassButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblProfile = new javax.swing.JLabel();
        lblCClass = new javax.swing.JLabel();
        lblSignOut = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(100, 200));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(500, 500));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 500));

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/profile.png"))); // NOI18N

        lblName.setBackground(new java.awt.Color(240, 249, 248));
        lblName.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Redowan Ibrahim");

        lblProfile.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblProfile.setForeground(new java.awt.Color(255, 153, 102));
        lblProfile.setText("Profile");
        lblProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblProfileMouseClicked(evt);
            }
        });

        lblCClass.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCClass.setForeground(new java.awt.Color(255, 153, 102));
        lblCClass.setText("Create Class");
        lblCClass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCClassMouseClicked(evt);
            }
        });

        lblSignOut.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSignOut.setForeground(new java.awt.Color(255, 153, 102));
        lblSignOut.setText("Sign Out");
        lblSignOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSignOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSignOutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(lblImage))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCClass, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(lblSignOut, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(100, Short.MAX_VALUE))
            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(lblImage)
                .addGap(18, 18, 18)
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(lblProfile)
                .addGap(29, 29, 29)
                .addComponent(lblCClass)
                .addGap(28, 28, 28)
                .addComponent(lblSignOut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.LINE_START);

        panel2.setBackground(new java.awt.Color(255, 255, 255));
        panel2.setMaximumSize(new java.awt.Dimension(500, 500));
        panel2.setPreferredSize(new java.awt.Dimension(670, 500));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        getContentPane().add(panel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>                        
    
    void setName() throws SQLException{
        stmt = conn.createStatement();
        rs = stmt.executeQuery("SELECT * FROM Teacher");
        
        while(rs.next()){
            int dataBaseID = rs.getInt("ID");
            
            if(ID==dataBaseID){
                String name = rs.getString("First_Name") + " " + rs.getString("Last_Name");
                lblName.setText(name);
                break;
            }
        }
    }
    
    void getClasses(){
        tableName = Integer.toString(this.ID);
        tableName = "_" + tableName;
        
        
        try {
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT * FROM "+tableName);
           
            
            while(rs.next()){
                String courseCode = rs.getString("Course_Code");
                String courseName = rs.getString("Course_Name");
                String sessionName = rs.getString("Session");
                String sectionName = rs.getString("Section");
                courseListCode.add(courseCode);
                courseList.add(courseName);
                courseListSession.add(sessionName);
                courseListSection.add(sectionName);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    void bodyofClassButton(){
        //private com.k33ptoo.components.KGradientPanel kGradientPanel1;
        
        jPanel1.setBackground(Color.LIGHT_GRAY);
        
        numberofCourses = courseList.size();
        
        int sz = 1300;
        
        if((numberofCourses*50)>sz)
            sz = numberofCourses*50;
        
        panel2.setPreferredSize(new Dimension(450,sz));
        panel2.setLayout(null);
        
        KGradientPanel[] courseListName = new com.k33ptoo.components.KGradientPanel[numberofCourses];
        String[] labelCourseName = new String[numberofCourses];
        String[] lblSession = new String[numberofCourses];
        String[] lblSection = new String[numberofCourses];
        
        int x = 5;
        int y = 5;
        int cnt = 0;
        //int idx = 0;
        
        for(int idx=0;idx<numberofCourses;idx++){
            courseListName[idx] = new KGradientPanel();
            courseListName[idx].setLayout(null);
            
            String courseName = courseList.get(idx);
            labelCourseName[idx] = new String(courseName);
            JLabel label = new JLabel(courseName);
            label.setBounds(2,2,150,50);
            label.setForeground(Color.WHITE);
            label.setFont(new Font("Tahoma", Font.BOLD, 18));
            courseListName[idx].add(label);
            
            String session = courseListSession.get(idx);
            lblSession[idx] = new String(session);
            JLabel lbl = new JLabel(session);
            lbl.setBounds(2,35,100,50);
            lbl.setForeground(Color.WHITE);
            lbl.setFont(new Font("Tahoma", Font.BOLD, 18));
            courseListName[idx].add(lbl);
            
            String section = courseListSection.get(idx);
            lblSection[idx] = new String(section);
            JLabel lbl2 = new JLabel(section);
            lbl2.setBounds(2,68,100,50);
            lbl2.setForeground(Color.WHITE);
            lbl2.setFont(new Font("Tahoma", Font.BOLD, 18));
            courseListName[idx].add(lbl2);
            
            if(cnt==0){
                courseListName[idx].setkEndColor(new java.awt.Color(238, 67, 238));
                courseListName[idx].setkStartColor(new java.awt.Color(255, 136, 17));
            }
                
            else if(cnt==1){
                courseListName[idx].setkEndColor(new java.awt.Color(153, 255, 204));
                courseListName[idx].setkStartColor(new java.awt.Color(0, 75, 255));
            }
                
            else if(cnt==2){
                courseListName[idx].setkEndColor(new java.awt.Color(0,0,255));
                courseListName[idx].setkStartColor(new java.awt.Color(255,0,255));
            }
               
            courseListName[idx].setForeground(Color.WHITE);
            courseListName[idx].setCursor(cursor);
            courseListName[idx].setBounds(x,y,200,150);
            panel2.add(courseListName[idx]);
            
            final int cc = cnt;
            final int idx1 = idx;
            
            courseListName[idx].addMouseListener(new MouseListener(){
                @Override
                public void mouseClicked(MouseEvent e) {
                    setVisible(false);
                    String courseCode = courseListCode.get(idx1);
                    String courseName = courseList.get(idx1);
                    String session = courseListSession.get(idx1);
                    String section = courseListSection.get(idx1);
                    
                    ClassElement ce = new ClassElement("Teacher",ID,Name,courseCode,courseName,session,section);
                    ce.setLocationRelativeTo(null);
                    ce.setVisible(true);
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                   // courseListName[idx1].setBackground(Color.red);
                    courseListName[idx1].setkEndColor(new java.awt.Color(0,0,0));
                    courseListName[idx1].setkStartColor(new java.awt.Color(0,0,0));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    KGradientPanel area = (KGradientPanel)e.getSource();
                    if(cc==0){
                        area.setkEndColor(new java.awt.Color(238, 67, 238));
                        area.setkStartColor(new java.awt.Color(255, 136, 17));
                    }
                        
                    else if(cc==1){
                        area.setkEndColor(new java.awt.Color(153, 255, 204));
                        area.setkStartColor(new java.awt.Color(0, 75, 255));
                    }
                        
                    else if(cc==2){
                        area.setkEndColor(new java.awt.Color(0,0,255));
                        area.setkStartColor(new java.awt.Color(255,0,255));
                    }
                          
                    area.setForeground(Color.WHITE);
                }
                
            });
            
            cnt = (cnt+1)%3;
            
            if(cnt==1)
                x = 215;
            else if(cnt==2)
                x = 425;
            else{
                x = 5;
                y+=165;
            }
        }
        
        
//        panelKG1 = new com.k33ptoo.components.KGradientPanel();
//        panelKG1.setBounds(5,5,200,150);
//        panelKG1.setkEndColor(new java.awt.Color(238, 67, 238));
//        panelKG1.setkStartColor(new java.awt.Color(255, 136, 17));
//        
//        panelKG2 = new com.k33ptoo.components.KGradientPanel();
//        panelKG2.setBounds(215,5,200,150);
//        panelKG2.setkEndColor(new java.awt.Color(153, 255, 204));
//        panelKG2.setkStartColor(new java.awt.Color(0, 75, 255));
//        
//        panelKG3 = new com.k33ptoo.components.KGradientPanel();
//        panelKG3.setBounds(425,5,200,150);
//        panelKG3.setkEndColor(new java.awt.Color(0,0,255));
//        panelKG3.setkStartColor(new java.awt.Color(255,0,255));
//        
//        panel2.add(panelKG1);
//        panel2.add(panelKG2);
//        panel2.add(panelKG3);
        
        scroll = new JScrollPane(panel2,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scroll.setPreferredSize(new Dimension(1000,1000));
        
        
        getContentPane().add(scroll,BorderLayout.CENTER);
    }
    
    private void lblProfileMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        
        setVisible(false);
        try {
            Profile profile  = new Profile("Teacher",ID,Name);
            profile.setLocationRelativeTo(null);
            profile.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                       

    private void lblSignOutMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        
        setVisible(false);
        
        try {
            LoginPage login = new LoginPage();
            login.setLocationRelativeTo(null);
            login.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }

          
    }                                       

    private void lblCClassMouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        
        setVisible(false);
        
        try {
            CreateClass create = new CreateClass(ID,Name);
            create.setLocationRelativeTo(null);
            create.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Teacher(0,"a").setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCClass;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblSignOut;
    private javax.swing.JPanel panel2;
    // End of variables declaration                   
    
    private int ID,numberofCourses;
    private JScrollPane scroll;
    private Container c;
    private JButton btn1,btn2,btn3,btn4,btn5,btn6;
    
    private ArrayList<String> courseList = new ArrayList<>();
    private ArrayList<String> courseListCode = new ArrayList<>();
    private ArrayList<String> courseListSession = new ArrayList<>();
    private ArrayList<String> courseListSection = new ArrayList<>();
    
    private com.k33ptoo.components.KGradientPanel panelKG1;
    private com.k33ptoo.components.KGradientPanel panelKG2;
    private com.k33ptoo.components.KGradientPanel panelKG3;
    
    private String tableName,Name;
    private Cursor cursor;
    
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
}
